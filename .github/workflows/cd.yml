name: Continuous Deployment

on:
    push:
        tags:
            - "[0-9]+.[0-9]+.[0-9]+"

jobs:
    publish:
        name: Publishing for ${{ matrix.job.target }}
        runs-on: ${{ matrix.job.os }}
        strategy:
            matrix:
                rust: [stable]
                job:
                    - os: ubuntu-latest
                      os-name: linux
                      target: aarch64-unknown-linux-gnu
                      architecture: aarch64
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: i686-unknown-linux-gnu
                      architecture: i686
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: arm-unknown-linux-gnueabi
                      architecture: arm
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: armv7-unknown-linux-gnueabihf
                      architecture: armv7
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: mips-unknown-linux-gnu
                      architecture: mips
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: mips64-unknown-linux-gnuabi64
                      architecture: mips64
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: mips64el-unknown-linux-gnuabi64
                      architecture: mips64el
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: mipsel-unknown-linux-gnu
                      architecture: mipsel
                      binary-postfix: ""
                      use-cross: true
                    - os: ubuntu-latest
                      os-name: linux
                      target: x86_64-unknown-linux-gnu
                      architecture: x86_64
                      binary-postfix: ""
                      use-cross: true

        steps:
            - name: Installing Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  override: true
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Cargo build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  use-cross: ${{ matrix.job.use-cross }}
                  toolchain: ${{ matrix.rust }}
                  args: --release --target ${{ matrix.job.target }}

            - name: install strip command
              shell: bash
              run: |
                  if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
                      sudo apt update
                      sudo apt-get install -y binutils-aarch64-linux-gnu
                  fi
            - name: Packaging final binary
              shell: bash
              run: |
                  cd target/${{ matrix.job.target }}/release

                  ####### reduce binary size by removing debug symbols #######
                  BINARY_NAME=cec-alsa-sync${{ matrix.job.binary-postfix }}
                  GCC_PREFIX=$(echo "${{ matrix.job.target }}-"|sed s/unknown-//)
                  "$GCC_PREFIX"strip $BINARY_NAME

                  ########## create tar.gz ##########
                  RELEASE_NAME=cec-alsa-sync-${GITHUB_REF/refs\/tags\//}-${{ matrix.job.os-name }}-${{ matrix.job.architecture }}
                  tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

                  ########## create sha256 ##########
                  if [[ ${{ runner.os }} == 'Windows' ]]; then
                    certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
                  else
                    shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
                  fi
            - name: Releasing assets
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      target/${{ matrix.job.target }}/release/cec-alsa-sync-*.tar.gz
                      target/${{ matrix.job.target }}/release/cec-alsa-sync-*.sha256
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish-cargo:
        name: Publishing to Cargo
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - name: Install libudev for cargo publish. Needed by libcec build
              run: sudo apt-get install libudev-dev
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - uses: actions-rs/cargo@v1
              with:
                  command: publish
                  args: --token ${{ secrets.CARGO_API_KEY }} --allow-dirty
